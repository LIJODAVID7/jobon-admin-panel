"use strict";Object.defineProperty(exports, "__esModule", { value: true });exports.default = void 0;
var _vitePluginVuetify = _interopRequireWildcard(await jitiImport("vite-plugin-vuetify"));function _interopRequireWildcard(e, t) {if ("function" == typeof WeakMap) var r = new WeakMap(),n = new WeakMap();return (_interopRequireWildcard = function (e, t) {if (!t && e && e.__esModule) return e;var o,i,f = { __proto__: null, default: e };if (null === e || "object" != typeof e && "function" != typeof e) return f;if (o = t ? n : r) {if (o.has(e)) return o.get(e);o.set(e, f);}for (const t in e) "default" !== t && {}.hasOwnProperty.call(e, t) && ((i = (o = Object.defineProperty) && Object.getOwnPropertyDescriptor(e, t)) && (i.get || i.set) ? o(f, t, i) : f[t] = e[t]);return f;})(e, t);} // https://nuxt.com/docs/api/configuration/nuxt-config
var _default = exports.default = defineNuxtConfig({
  compatibilityDate: "2025-07-15",
  devtools: { enabled: true },
  build: {
    transpile: ["vuetify"]
  },
  runtimeConfig: {
    public: {
      apiBase: process.env.NUXT_PUBLIC_API_BASE
    }
  },
  modules: [
  (_options, nuxt) => {
    nuxt.hooks.hook("vite:extendConfig", (config) => {
      // @ts-expect-error
      config.plugins.push((0, _vitePluginVuetify.default)({ autoImport: true }));
    });
  },
  "@nuxt/fonts",
  "@nuxt/icon",
  "@nuxt/image",
  "@pinia/nuxt",
  "pinia-plugin-persistedstate/nuxt",
  "nuxt-lucide-icons"],

  vite: {
    vue: {
      template: {
        transformAssetUrls: _vitePluginVuetify.transformAssetUrls
      }
    }
  }
}); /* v9-04f182a7ac786701 */
